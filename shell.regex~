正则表达式主要用于字符串的模式分割、匹配、查找和替换操作
通配符是完全匹配，用来匹配文件名，find/cp/ls等命令不]支持正则，只能用shell自身的通配符；
正则表达式是包含匹配，正则匹配符合条件的字符串（文件内容），grep/awk/sed等命令可以支持正则；
######################################################
基础正则表达式
* . ^ $ [] [^]

a*
aa*
a.a
a.*a
^a------------行首是a的行
a$------------行尾是b的行
[0-9]---------匹配括号内的任意一个字符(包含即可)
^[0-9]
^[^0-9]---------中括号里的^表示取反

@@@@@@@@@@@@@
别名文件：/root(or user)/.bashrc
@@@@@@@@@@@@@

转义符\

a\{3\}
a\{3,\}-------两者效果类似，都是表示a连续出现至少三次
a\{1,3\}------a重复1次到3次

&&&eg:
[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}---------------------匹配时间
[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}---------------匹配IP

#############################################################
行提取命令 grep


字符截取命令
cut awk sed
cut -f 2,3,4 -d ":"

-f指定列数；
-d指定分隔符



awk '条件1{任务1}……' 文件
$0表示第一列……
逐行执行。
条件：BEGIN/END
{FS=":"}>>>>>>>>>>指定分隔符
cat ……|grep "……"|awk '{FS=":"}{print $1 "\t" $3}'
cat ……|grep "……"|awk 'BEGIN{FS=":"}{print $1 "\t" $3}'


sed
sed [选项]['动作']文件名
选项：-n  只显示经过sed命令处理的行
      -e  允许对输入数据应用多条sed命令
      -i  直接修改原文件
动作：
-a追加行
-c行替换
-i插入一行或多行
-d删除指定行
-p打印指定行
-s字符替换，格式为"行范围s/旧字串/新字串/g"

@@@@@@@@@@@@@@@@@@@
管道符|

printf
printf '输出类型输出格式' 输出内容
输出类型
%ns
%ni
%m.nf------------------%8.2f表示输出整数部分八位，小数部分两位的浮点数
输出格式
\a（输出报警声） \b \f（清屏） \n(换行) \r（回车） \t \v

@@@@@@@@@@@@@@@@@@@

