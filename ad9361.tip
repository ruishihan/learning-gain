#################################################ad9361write.c
（在看这段程序时，浪费了很多时间，如果早结合go.v文件来看的话，有些东西就一目了然了。要学聪明一些，结合相关资源，可以少走弯路）

-f -r -w 三个选项

-w 地址 赋值（皆为16进制）
-r 地址
-f 文件名


使用-f选项时，文件中有三种命令：“SPIWRITE”“SPIREAD”“WAIT_CALDONE”
SPIWRITE 地址，赋值


SPIREAD  参数，地址---------参数包括位数（4-11位）、预想值（0-4，应该是取0位）
SPIREAD的参数有两种 BB和两位16进制数，BB表示只读，但是程序中没有设计对BB情况的处理；两位16进制数中，前一位是指明要校验该寄存器的位数，后一位是表示该位应有的值（0/1）,如果寄存器只该位的值于应有的值不一致，则报错。
在1.v文件中，还有的SPIREAD后只跟了一个地址而没有BB参数（go.v文件中有BB参数），理论上这不符合既定的读写格式，但是由于程序中对不符合规则的命令和参数为BB 的SPIREAD命令都没有处理而是直接跳过，所以并没有差别。但是在参数BB的情况下应该是读一下寄存器的，当加上该操作后，1.v文件就会漏掉这些读操作。


WAIT_CALDONE ***，时间
WAIT_CALDONE命令中只有时间是有用的参数，前面的***可以是任意值，只是为了符合读写格式。


在ad9361write程序中，先将以逗号隔开的两个值从字符串型转化为两个32bit的16进制数（实际上，9361的寄存器值是8bit，地址是10bit）。执行-w时，直接将地址和赋值（64bit,8 Bytes）,丢给FPGA；
执行-r时，？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？/
（与FPGA的程序有关）



#############################################AD9361的SPI控制过程
BBP通过SPI总线来完成对AD9361寄存器的设置，可采用3-wire或4-wire模式，以四线模式为例：
首先是是使能SPI，一给出使能信号，AD9361就认为开始传数据了。
AD9361先接受16字节的control field其中，D15是R/W选项，1为W；D14-D12三位表明一次传输是N个字节（1-8 Bytes）；D11/D10空缺；D9-D0是十位数据，表示要进行操作的连续N个寄存器的起始地址。
然后根绝control field的设定，AD9361从SPI_DI上接受N个寄存器的赋值，或者通过SPI_DO发送N个寄存器的值给BBP。

###########################################AD9361在LVDS MOD 下的数据传输过程
P0为6对TX_N/P，P1为6对RX_N/P
在一个时钟的上升沿和下降沿分别采I路和Q路的数据，对于1R1T系统来说，第一个时钟内传IMSB和QMSB，第二个时钟内传ILSB和QLSB，这样在两个时钟周期内完成了I/Q两路数据的一组数据传输（ADC是12位的）。对于2R2T则需要四个时钟周期完成一组数据传输。
FRAME如果采用占空比为50%的脉冲的话，每个FRAME周期包含一组数据的传输。




#########S#############################software-Defined-Radio-Solutions-From-ADI-Press_cn

器件集RF前端与灵活的混合信号基带部分为一体,集成频率合成器,为处理器或FPGA提供可配置数字接口；
工作频率为70MHz至6GHz；
芯片支持的通道带宽范围为低于200KHZ至56MHZ；------------带宽的的意义及带宽和采样率速率的关系？？？
LO（本振）步长最大值为2.5HZ；

@@@@@@@@@@在AD9361中，所有的TX RX的方向都是按照RF的收发来命名的。。。。



#######################################AD9361_Register_Map_Reference_Manual_UG-671
SPI 0x000 SPI config 可选3-wire 和LSB first
TX MON 0x001
CLK  0x001(sync) 0x005(tx/rx VCO) 0x006(data_clock&data_delay) 0x007(TX clock & data/FB delay) 0x009 0x00A(CLK_OUT & BBPLL divider
                                                                                                            ------- 生成ADC CLK)
Filter 0x002 (THB1/2/3 TxFIR)    0x003(RHB1/2/3 RxFIR)

TX(RF) 0x002(EN) 0x004(选A/B) 0x010(swap IQ &CHANNEL)

RX(RF) 0x003(EN,选1/2) 0x004(选A/B/C) 0x010(swap IQ &CHANNEL)

RX_FRAME 0x010 D3 RX_FRAME PULSE MODE;0x011 IVERT FRAME

DELAY???????????????????

DATA  0X010（change/swap）   0x03B(CLK/PORT drive/slew) 0x03C 0X03D+0x03E(PN INVERT----LVDS+TXFRAME+RXFRAME+DATACLK+FBCLK)
      0X010-0x012  -------parallel port config

ENSM
Freq:TX 233 234 235 231 231 005 前三位为小数部分的0-22（8+8+6），中间两位是整数部分0-10(8+3),005高4位设定TX LO divider
     RX 273 274 275 271 272 005 类上

######################################################LVDS传输过程
AD9361集成了LVDS协议，在时钟的上升沿和下降沿都要采数，上升沿接收6位（6对P/N接口）I路数据，下降沿接收6位Q路数据。因此只需要关注并配合LVDS口的协议，而不用管AD9361存储I/Q两路数据的寄存器。

AD9361在TX过程中，从FPGA处接收I/Q两路数字信号，然后分别通过一路TX的两个DAC形成两路模拟信号，最后两个模拟信号合成一个信号通过射频发出。（cos+sin>>cos）

在LVDS模式下，swap port禁用，始终是P0做TX，P1做RX。

###################################################引时钟信号给FPGA
由于AD9361的时钟频率很高，所以将AD9361的时钟信号引出一路供给FPGA。

